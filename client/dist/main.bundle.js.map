{"version":3,"sources":["/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/$_lazy_route_resource lazy","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app-routing.module.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.module.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/main.service.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.css","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.html","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/environments/environment.ts","/Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainService } from './main.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditSelfComponent } from './edit-self/edit-self.component';\nimport { NewuserComponent } from './newuser/newuser.component';\nimport { EditOtherComponent } from './edit-other/edit-other.component';\nimport { MessageComponent } from './message/message.component';\nimport { EventDashboardComponent } from './event-dashboard/event-dashboard.component';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\n\n\n\nconst routes: Routes = [\n{path: \"\", pathMatch: \"full\", component: WelcomeComponent},\n{path: \"signin\", pathMatch: \"full\", component: LoginComponent},\n{path: \"register\", pathMatch: \"full\", component: RegisterComponent},\n{path: \"dashboard\", pathMatch: \"full\", component: DashboardComponent},\n{path: \"edit\", pathMatch: \"full\", component: EditSelfComponent},\n{path: \"addnew\", pathMatch: \"full\", component: NewuserComponent},\n{path: \"edit_other/:id\", pathMatch: \"full\", component: EditOtherComponent},\n{path: \"message/:id\", pathMatch: \"full\", component: MessageComponent},\n{path: \"events\", pathMatch: \"full\", component: EventDashboardComponent},\n{path: \"eventdetail/:id\", pathMatch: \"full\", component: EventDetailComponent},\n\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; \nimport { HttpModule } from '@angular/http'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {MainService} from './main.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditSelfComponent } from './edit-self/edit-self.component';\nimport { NewuserComponent } from './newuser/newuser.component';\nimport { EditOtherComponent } from './edit-other/edit-other.component';\nimport { MessageComponent } from './message/message.component';\nimport { EventDashboardComponent } from './event-dashboard/event-dashboard.component';\nimport { EventDetailComponent } from './event-detail/event-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    EditSelfComponent,\n    NewuserComponent,\n    EditOtherComponent,\n    MessageComponent,\n    EventDashboardComponent,\n    EventDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, \n    HttpModule,\n  ],\n  providers: [MainService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/dashboard.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 1000px;\\n  opacity: 0.9;\\n  background-attachment:fixed;\\n  \\n}\\n\\n.tabletop {\\n  display: inline-block;\\n  margin-top: 100px;\\n\\n}\\n\\n#addnew {\\n  float: right;\\n}\\n\\n.namelink {\\n  color: #eafe05;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\" (submit) = \\\"logout()\\\">\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n      </form>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"back\\\">\\n  <div class=\\\"container\\\">\\n\\n    <div *ngIf = \\\"current_user.user_level == '9'\\\">\\n      <h2 class=\\\"tabletop\\\">Manage User</h2>\\n      <a [routerLink]=\\\"['/addnew']\\\"><button id=\\\"addnew\\\" class=\\\"tabletop btn btn-secondary\\\">Add new</button></a>\\n    </div>\\n\\n    <h2 *ngIf = \\\"current_user.user_level == '0'\\\" class=\\\"tabletop\\\">All users</h2>\\n\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th scope=\\\"col\\\">Name</th>\\n          <th scope=\\\"col\\\">Email</th>\\n          <th scope=\\\"col\\\">Create_at</th>\\n          <th scope=\\\"col\\\">Location</th>\\n          <th scope=\\\"col\\\">User Level</th>\\n          <th scope=\\\"col\\\" *ngIf = \\\"current_user.user_level == '9'\\\">Actions</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr class=\\\"table-success\\\" *ngFor = \\\"let a of allusers\\\">\\n          <th scope=\\\"row\\\"><a [routerLink]=\\\"['/message', a._id]\\\" class=\\\"namelink\\\">{{a.first_name}} {{a.last_name}}</a></th>\\n          <td>{{a.email}}</td>\\n          <td>{{a.createdAt | date:'longDate'}}</td>\\n          <td>{{a.location}}</td>\\n          <td *ngIf = \\\"a.user_level == 9\\\">Admin</td>\\n          <td *ngIf = \\\"a.user_level == 0\\\">Normal</td>\\n          <td *ngIf = \\\"current_user.user_level == '9'\\\">\\n            <a [routerLink]=\\\"['/edit_other', a._id]\\\"><button *ngIf = \\\"a.user_level != '9'\\\" class=\\\"btn btn-info\\\">Edit</button></a> \\n            <button *ngIf = \\\"a.user_level != '9'\\\" class=\\\"btn btn-danger\\\" (click) =(delete_user(a._id))>Delete</button> </td>\\n\\n          </tr>\\n        </tbody>\\n      </table> \\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  current_user;\n  allusers;\n  constructor(private _service: MainService, private _router: Router) { }\n\n  ngOnInit() {\n    if(localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    this.current_user = this._service.user;\n    console.log(\"from dash com oninit: \", this.current_user);\n    this._service.retrieveAllUser((res) => {\n      this.allusers = res;\n    })\n  }\n\n  delete_user(id) {\n    console.log(\"from dashboard com delete: \", id);\n    this._service.delete_user(id, (res) => {\n      console.log(\"delete user success from dashboard com: \", res);\n    })\n    this._service.retrieveAllUser((res) => {\n      this.allusers = res;\n    })\n  }\n\n  logout() {\n    this._service.logout();\n    this._router.navigate(['/']);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/editother.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 1000px;\\n  opacity: 0.9;\\n  overflow: auto;\\n\\n}\\n.top {\\n  margin-top: 284px;\\n}\\n\\n.inlineshow {\\n  display: inline-block;\\n  /*width: 500px;*/\\n}\\n.editcontrol {\\n  display: inline-block;\\n  width: 100%;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 0.9375rem;\\n  line-height: 1.5;\\n  color: #7b8a8b;\\n  background-color: #fff;\\n  background-image: none;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\\n}\\n\\n.bigdiv {\\n  margin-left: 100px; \\n  margin-top: 100px;\\n}\\n\\n.subformdiv {\\n  display: inline-block;\\n  /*border: 1px solid black;*/\\n}\\n.des_form {\\n  margin-left: 110px;\\n  margin-top: 20px;\\n}\\n\\np {\\n  color: red;\\n}\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.css\n// module id = ../../../../../src/app/edit-other/edit-other.component.css\n// module chunks = main","module.exports = \"<div class=\\\"back\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" style=\\\"color: white;\\\">Bruce's App</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\" (submit)=\\\"logout()\\\">\\n          <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n        </form>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <!-- edit information -->\\n  <div class=\\\"container top\\\">\\n    <div class=\\\"bigdiv\\\">\\n      <h2 style=\\\"color: green;\\\">Being editted user: {{being_editted_user.first_name}} {{being_editted_user.last_name}}</h2>\\n      <div class=\\\"col-lg-5 subformdiv\\\">\\n        <h3>Edit information</h3>\\n        <form (submit)=\\\"update_other()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input type=\\\"text\\\" name=\\\"first_name\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"being_editted_user.first_name\\\" required #update_firstname=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"update_firstname.invalid && (update_firstname.dirty || update_firstname.touched)\\\">\\n            <p *ngIf=\\\"update_firstname.errors.required\\\">\\n              First Name is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input type=\\\"text\\\" name=\\\"last_name\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"being_editted_user.last_name\\\" required #update_lastname=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"update_lastname.invalid && (update_lastname.dirty || update_lastname.touched)\\\">\\n            <p *ngIf=\\\"update_lastname.errors.required\\\">\\n              Last Name is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Location</label>\\n            <select [(ngModel)]=\\\"being_editted_user.location\\\" #update_location=\\\"ngModel\\\" name=\\\"locat\\\" required>\\n              <option value=\\\"AL\\\">Alabama</option>\\n              <option value=\\\"AK\\\">Alaska</option>\\n              <option value=\\\"AZ\\\">Arizona</option>\\n              <option value=\\\"AR\\\">Arkansas</option>\\n              <option value=\\\"CA\\\">California</option>\\n              <option value=\\\"CO\\\">Colorado</option>\\n              <option value=\\\"CT\\\">Connecticut</option>\\n              <option value=\\\"DE\\\">Delaware</option>\\n              <option value=\\\"DC\\\">District Of Columbia</option>\\n              <option value=\\\"FL\\\">Florida</option>\\n              <option value=\\\"GA\\\">Georgia</option>\\n              <option value=\\\"HI\\\">Hawaii</option>\\n              <option value=\\\"ID\\\">Idaho</option>\\n              <option value=\\\"IL\\\">Illinois</option>\\n              <option value=\\\"IN\\\">Indiana</option>\\n              <option value=\\\"IA\\\">Iowa</option>\\n              <option value=\\\"KS\\\">Kansas</option>\\n              <option value=\\\"KY\\\">Kentucky</option>\\n              <option value=\\\"LA\\\">Louisiana</option>\\n              <option value=\\\"ME\\\">Maine</option>\\n              <option value=\\\"MD\\\">Maryland</option>\\n              <option value=\\\"MA\\\">Massachusetts</option>\\n              <option value=\\\"MI\\\">Michigan</option>\\n              <option value=\\\"MN\\\">Minnesota</option>\\n              <option value=\\\"MS\\\">Mississippi</option>\\n              <option value=\\\"MO\\\">Missouri</option>\\n              <option value=\\\"MT\\\">Montana</option>\\n              <option value=\\\"NE\\\">Nebraska</option>\\n              <option value=\\\"NV\\\">Nevada</option>\\n              <option value=\\\"NH\\\">New Hampshire</option>\\n              <option value=\\\"NJ\\\">New Jersey</option>\\n              <option value=\\\"NM\\\">New Mexico</option>\\n              <option value=\\\"NY\\\">New York</option>\\n              <option value=\\\"NC\\\">North Carolina</option>\\n              <option value=\\\"ND\\\">North Dakota</option>\\n              <option value=\\\"OH\\\">Ohio</option>\\n              <option value=\\\"OK\\\">Oklahoma</option>\\n              <option value=\\\"OR\\\">Oregon</option>\\n              <option value=\\\"PA\\\">Pennsylvania</option>\\n              <option value=\\\"RI\\\">Rhode Island</option>\\n              <option value=\\\"SC\\\">South Carolina</option>\\n              <option value=\\\"SD\\\">South Dakota</option>\\n              <option value=\\\"TN\\\">Tennessee</option>\\n              <option value=\\\"TX\\\">Texas</option>\\n              <option value=\\\"UT\\\">Utah</option>\\n              <option value=\\\"VT\\\">Vermont</option>\\n              <option value=\\\"VA\\\">Virginia</option>\\n              <option value=\\\"WA\\\">Washington</option>\\n              <option value=\\\"WV\\\">West Virginia</option>\\n              <option value=\\\"WI\\\">Wisconsin</option>\\n              <option value=\\\"WY\\\">Wyoming</option>\\n            </select>\\n          </div>\\n          <div *ngIf=\\\"update_location.invalid && (update_location.dirty || update_location.touched)\\\">\\n            <p *ngIf=\\\"update_location.errors.required\\\">\\n              Location is required.\\n            </p>\\n          </div>\\n          <hr>\\n          <button class=\\\"btn btn-primary\\\">Update Information</button>\\n        </form>\\n      </div>\\n\\n      <!-- change password -->\\n      <div class=\\\"col-lg-5 subformdiv\\\">\\n        <h3>Edit password</h3>\\n        <form (submit)=\\\"update_otherpassword()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"password_update\\\" required #password=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n            <p *ngIf=\\\"password.errors.required\\\">\\n              Password is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Password confirmation</label>\\n            <input type=\\\"password\\\" name=\\\"passwordcon\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"passwordcon\\\" required pattern=\\\"{{password_update}}\\\"\\n              #password_con=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"password_con.invalid && (password_con.dirty || password_con.touched)\\\">\\n            <p *ngIf=\\\"password_con.errors.required\\\">\\n              Password confirmation is required.\\n            </p>\\n            <p *ngIf=\\\"password_con.errors.pattern\\\">\\n              Password confirmation is not mattch your password.\\n            </p>\\n          </div>\\n          <hr>\\n          <button class=\\\"btn btn-primary\\\">Update Password</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.html\n// module id = ../../../../../src/app/edit-other/edit-other.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-other',\n  templateUrl: './edit-other.component.html',\n  styleUrls: ['./edit-other.component.css']\n})\nexport class EditOtherComponent implements OnInit {\n  current_user;\n  being_editted_user = {\n    first_name: \"\",\n    last_name: \"\",\n    location: \"\"\n  };\n  being_editted_id = {\n    id: \"\"\n  }\n \n\n  password_update;\n  passwordcon;\n\n  error_message = {\n    email: \"\"\n  }\n  constructor(private _service: MainService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.current_user = this._service.user;\n    if(localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    if(this.current_user.user_level != 9) {\n      this._router.navigate(['/']);\n      localStorage.removeItem(\"user\");\n    }\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n        this.being_editted_user = res;\n        this.being_editted_id = res._id\n        console.log(\"from edit other com oninit: \", this.being_editted_id);\n      })\n    })\n  }\n\n  //update other user by admin\n  update_other() {\n    this._service.update_other(this.being_editted_id, this.being_editted_user, (res) => {\n      this._router.navigate(['dashboard']);\n    })\n  \n  }\n\n  update_otherpassword() {\n    console.log(\"from com updatepassword: \", this.password_update);\n    this._service.update_other_password(this.being_editted_id, this.password_update, \n      (res) => {\n      console.log(\"from edit other com update password: success update\", res);\n    })\n    this._router.navigate(['dashboard']);\n    this.password_update = \"\";\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-other/edit-other.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/editself.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 1000px;\\n  opacity: 0.9;\\n  overflow: auto;\\n\\n}\\n.top {\\n  margin-top: 30px;\\n}\\n\\n.inlineshow {\\n  display: inline-block;\\n  /*width: 500px;*/\\n}\\n.editcontrol {\\n  display: inline-block;\\n  width: 100%;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 0.9375rem;\\n  line-height: 1.5;\\n  color: #7b8a8b;\\n  background-color: #fff;\\n  background-image: none;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\\n}\\n\\n.bigdiv {\\n  /*margin-left: 100px; */\\n  margin-top: 100px;\\n  color: white;\\n}\\n\\n.subformdiv {\\n  display: inline-block;\\n  /*border: 1px solid black;*/\\n}\\n.des_form {\\n  margin-left: 10px;\\n  margin-top: 20px;\\n  color: white;\\n}\\n\\np {\\n  color: red;\\n}\\n\\n/* .margin {\\n  padding-bottom: 40px;\\n} */\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.css\n// module id = ../../../../../src/app/edit-self/edit-self.component.css\n// module chunks = main","module.exports = \"<div class=\\\"back\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" style=\\\"color: white;\\\">Bruce's App</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\n        aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events\\n              <span class=\\\"sr-only\\\">(current)</span>\\n            </a>\\n          </li>\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\" (submit)=\\\"logout()\\\">\\n          <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n        </form>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <!-- edit information -->\\n  <div class=\\\"container\\\">\\n    <div class=\\\"bigdiv\\\">\\n      <div class=\\\"col-lg-5 subformdiv\\\">\\n        <h3>Edit information</h3>\\n        <form (submit)=\\\"update()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>First Name</label>\\n            <input type=\\\"text\\\" name=\\\"first_name\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"user.first_name\\\" required #update_firstname=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"update_firstname.invalid && (update_firstname.dirty || update_firstname.touched)\\\">\\n            <p *ngIf=\\\"update_firstname.errors.required\\\">\\n              First Name is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Last Name</label>\\n            <input type=\\\"text\\\" name=\\\"last_name\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"user.last_name\\\" required #update_lastname=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"update_lastname.invalid && (update_lastname.dirty || update_lastname.touched)\\\">\\n            <p *ngIf=\\\"update_lastname.errors.required\\\">\\n              Last Name is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Location</label>\\n            <select [(ngModel)]=\\\"user.location\\\" #update_location=\\\"ngModel\\\" name=\\\"locat\\\" required>\\n              <option value=\\\"AL\\\">Alabama</option>\\n              <option value=\\\"AK\\\">Alaska</option>\\n              <option value=\\\"AZ\\\">Arizona</option>\\n              <option value=\\\"AR\\\">Arkansas</option>\\n              <option value=\\\"CA\\\">California</option>\\n              <option value=\\\"CO\\\">Colorado</option>\\n              <option value=\\\"CT\\\">Connecticut</option>\\n              <option value=\\\"DE\\\">Delaware</option>\\n              <option value=\\\"DC\\\">District Of Columbia</option>\\n              <option value=\\\"FL\\\">Florida</option>\\n              <option value=\\\"GA\\\">Georgia</option>\\n              <option value=\\\"HI\\\">Hawaii</option>\\n              <option value=\\\"ID\\\">Idaho</option>\\n              <option value=\\\"IL\\\">Illinois</option>\\n              <option value=\\\"IN\\\">Indiana</option>\\n              <option value=\\\"IA\\\">Iowa</option>\\n              <option value=\\\"KS\\\">Kansas</option>\\n              <option value=\\\"KY\\\">Kentucky</option>\\n              <option value=\\\"LA\\\">Louisiana</option>\\n              <option value=\\\"ME\\\">Maine</option>\\n              <option value=\\\"MD\\\">Maryland</option>\\n              <option value=\\\"MA\\\">Massachusetts</option>\\n              <option value=\\\"MI\\\">Michigan</option>\\n              <option value=\\\"MN\\\">Minnesota</option>\\n              <option value=\\\"MS\\\">Mississippi</option>\\n              <option value=\\\"MO\\\">Missouri</option>\\n              <option value=\\\"MT\\\">Montana</option>\\n              <option value=\\\"NE\\\">Nebraska</option>\\n              <option value=\\\"NV\\\">Nevada</option>\\n              <option value=\\\"NH\\\">New Hampshire</option>\\n              <option value=\\\"NJ\\\">New Jersey</option>\\n              <option value=\\\"NM\\\">New Mexico</option>\\n              <option value=\\\"NY\\\">New York</option>\\n              <option value=\\\"NC\\\">North Carolina</option>\\n              <option value=\\\"ND\\\">North Dakota</option>\\n              <option value=\\\"OH\\\">Ohio</option>\\n              <option value=\\\"OK\\\">Oklahoma</option>\\n              <option value=\\\"OR\\\">Oregon</option>\\n              <option value=\\\"PA\\\">Pennsylvania</option>\\n              <option value=\\\"RI\\\">Rhode Island</option>\\n              <option value=\\\"SC\\\">South Carolina</option>\\n              <option value=\\\"SD\\\">South Dakota</option>\\n              <option value=\\\"TN\\\">Tennessee</option>\\n              <option value=\\\"TX\\\">Texas</option>\\n              <option value=\\\"UT\\\">Utah</option>\\n              <option value=\\\"VT\\\">Vermont</option>\\n              <option value=\\\"VA\\\">Virginia</option>\\n              <option value=\\\"WA\\\">Washington</option>\\n              <option value=\\\"WV\\\">West Virginia</option>\\n              <option value=\\\"WI\\\">Wisconsin</option>\\n              <option value=\\\"WY\\\">Wyoming</option>\\n            </select>\\n          </div>\\n          <div *ngIf=\\\"update_location.invalid && (update_location.dirty || update_location.touched)\\\">\\n            <p *ngIf=\\\"update_location.errors.required\\\">\\n              Location is required.\\n            </p>\\n          </div>\\n\\n          <hr>\\n          <button class=\\\"btn btn-primary\\\">Update Information</button>\\n        </form>\\n      </div>\\n\\n      <!-- change password -->\\n      <div class=\\\"col-lg-5 subformdiv\\\">\\n        <h3>Edit password</h3>\\n        <form (submit)=\\\"updatepassword()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"password_update\\\" required #password=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n            <p *ngIf=\\\"password.errors.required\\\">\\n              Password is required.\\n            </p>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Password confirmation</label>\\n            <input type=\\\"password\\\" name=\\\"passwordcon\\\" class=\\\"editcontrol\\\" [(ngModel)]=\\\"passwordcon\\\" required pattern=\\\"{{password_update}}\\\"\\n              #password_con=\\\"ngModel\\\">\\n          </div>\\n          <div *ngIf=\\\"password_con.invalid && (password_con.dirty || password_con.touched)\\\">\\n            <p *ngIf=\\\"password_con.errors.required\\\">\\n              Password confirmation is required.\\n            </p>\\n            <p *ngIf=\\\"password_con.errors.pattern\\\">\\n              Password confirmation is not mattch your password.\\n            </p>\\n          </div>\\n          <hr>\\n          <button class=\\\"btn btn-primary\\\">Update Password</button>\\n        </form>\\n      </div>\\n    </div>\\n\\n    <!-- edit description -->\\n    <form class=\\\"des_form\\\" (submit)=\\\"add_description()\\\">\\n      <h3>Edit Description</h3>\\n      <input type=\\\"text\\\" name=\\\"des\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" required #des=\\\"ngModel\\\">\\n      <div *ngIf=\\\"des.invalid && (des.dirty || des.touched)\\\">\\n        <p *ngIf=\\\"des.errors.required\\\">\\n          Description is required.\\n        </p>\\n      </div>\\n      <hr>\\n      <button class=\\\"btn btn-primary\\\">Save Description</button>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.html\n// module id = ../../../../../src/app/edit-self/edit-self.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-edit-self',\n  templateUrl: './edit-self.component.html',\n  styleUrls: ['./edit-self.component.css']\n})\nexport class EditSelfComponent implements OnInit {\n  user;\n  updateinfo = {\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    location: \"\"\n  }\n  password_update;\n  passwordcon;\n  description;\n  error_message = {\n    email: \"\"\n  }\n\n  constructor(private _service: MainService, private _router: Router) { }\n\n  ngOnInit() {\n    if (localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    this.user = this._service.user;\n    console.log(this.user);\n  }\n\n  update() {\n    this._service.update(this.user, (res) => {\n      this._router.navigate(['dashboard']);\n    })\n    // this._router.navigate(['dashboard']);  \n\n  }\n\n  updatepassword() {\n    console.log(\"from com updatepassword: \", this.password_update);\n    this._service.updatepassword(this.password_update, (res) => {\n      console.log(\"from com update password: success update\", res);\n    })\n    this._router.navigate(['dashboard']);\n    this.password_update = \"\";\n  }\n\n  add_description() {\n    console.log(\"from com add des: \", this.description);\n    this._service.add_description(this.description, (res) => {\n      console.log(\"from com add description success: \", res);\n    })\n    this._router.navigate(['dashboard']);\n    this.description = \"\";\n  }\n\n\n  logout() {\n    this._service.logout();\n    this._router.navigate(['/']);\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/edit-self/edit-self.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/eventdashboard.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  background-attachment:fixed;\\n  height: 1000px;\\n  opacity: 0.9;\\n  padding-top: 100px;\\n}\\n\\n.showtable {\\n  height: 800px;\\n  overflow: scroll;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.css\n// module id = ../../../../../src/app/event-dashboard/event-dashboard.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" style=\\\"color: white;\\\">Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard\\n            <span class=\\\"sr-only\\\">(current)</span>\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile\\n            <span class=\\\"sr-only\\\">(current)</span>\\n          </a>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\" (submit)=\\\"logout()\\\">\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n      </form>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"back\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"showtable\\\">\\n      <h2>Welcome, {{user.first_name}} {{user.last_name}}, from {{user.location}}</h2>\\n      <hr>\\n      <form (submit)=\\\"create_event()\\\">\\n        <h3>Add Event</h3>\\n        <div class=\\\"form-group\\\">\\n          <label>Name: </label>\\n          <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter event name\\\" [(ngModel)]=\\\"event.name\\\"\\n            required #event_name=\\\"ngModel\\\">\\n        </div>\\n        <div *ngIf=\\\"event_name.invalid && (event_name.dirty || event_name.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"event_name.errors.required\\\">\\n            Event name is required.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Date:</label>\\n          <input min=\\\"{{ tomorrow }}\\\" type=\\\"date\\\" name=\\\"date\\\" [(ngModel)]=\\\"event.date\\\" required #event_date=\\\"ngModel\\\">\\n          <div *ngIf=\\\"event_date.invalid && (event_date.dirty || event_date.touched)\\\">\\n            <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"event_name.errors.required\\\">\\n              Event date is required.\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label>Location:</label>\\n          <select [(ngModel)]=event.location #event_location=\\\"ngModel\\\" name=\\\"locat\\\" required>\\n            <option value=\\\"AL\\\">Alabama</option>\\n            <option value=\\\"AK\\\">Alaska</option>\\n            <option value=\\\"AZ\\\">Arizona</option>\\n            <option value=\\\"AR\\\">Arkansas</option>\\n            <option value=\\\"CA\\\">California</option>\\n            <option value=\\\"CO\\\">Colorado</option>\\n            <option value=\\\"CT\\\">Connecticut</option>\\n            <option value=\\\"DE\\\">Delaware</option>\\n            <option value=\\\"DC\\\">District Of Columbia</option>\\n            <option value=\\\"FL\\\">Florida</option>\\n            <option value=\\\"GA\\\">Georgia</option>\\n            <option value=\\\"HI\\\">Hawaii</option>\\n            <option value=\\\"ID\\\">Idaho</option>\\n            <option value=\\\"IL\\\">Illinois</option>\\n            <option value=\\\"IN\\\">Indiana</option>\\n            <option value=\\\"IA\\\">Iowa</option>\\n            <option value=\\\"KS\\\">Kansas</option>\\n            <option value=\\\"KY\\\">Kentucky</option>\\n            <option value=\\\"LA\\\">Louisiana</option>\\n            <option value=\\\"ME\\\">Maine</option>\\n            <option value=\\\"MD\\\">Maryland</option>\\n            <option value=\\\"MA\\\">Massachusetts</option>\\n            <option value=\\\"MI\\\">Michigan</option>\\n            <option value=\\\"MN\\\">Minnesota</option>\\n            <option value=\\\"MS\\\">Mississippi</option>\\n            <option value=\\\"MO\\\">Missouri</option>\\n            <option value=\\\"MT\\\">Montana</option>\\n            <option value=\\\"NE\\\">Nebraska</option>\\n            <option value=\\\"NV\\\">Nevada</option>\\n            <option value=\\\"NH\\\">New Hampshire</option>\\n            <option value=\\\"NJ\\\">New Jersey</option>\\n            <option value=\\\"NM\\\">New Mexico</option>\\n            <option value=\\\"NY\\\">New York</option>\\n            <option value=\\\"NC\\\">North Carolina</option>\\n            <option value=\\\"ND\\\">North Dakota</option>\\n            <option value=\\\"OH\\\">Ohio</option>\\n            <option value=\\\"OK\\\">Oklahoma</option>\\n            <option value=\\\"OR\\\">Oregon</option>\\n            <option value=\\\"PA\\\">Pennsylvania</option>\\n            <option value=\\\"RI\\\">Rhode Island</option>\\n            <option value=\\\"SC\\\">South Carolina</option>\\n            <option value=\\\"SD\\\">South Dakota</option>\\n            <option value=\\\"TN\\\">Tennessee</option>\\n            <option value=\\\"TX\\\">Texas</option>\\n            <option value=\\\"UT\\\">Utah</option>\\n            <option value=\\\"VT\\\">Vermont</option>\\n            <option value=\\\"VA\\\">Virginia</option>\\n            <option value=\\\"WA\\\">Washington</option>\\n            <option value=\\\"WV\\\">West Virginia</option>\\n            <option value=\\\"WI\\\">Wisconsin</option>\\n            <option value=\\\"WY\\\">Wyoming</option>\\n          </select>\\n        </div>\\n        <div *ngIf=\\\"event_location.invalid && (event_location.dirty || event_location.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"event_location.errors.required\\\">\\n            Location is required.\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Add Event</button>\\n      </form>\\n      <br>\\n      <!-- event from the same state of current user -->\\n\\n\\n\\n      <div class=\\\"same_state\\\">\\n        <h4>Here are some of the events at your state:</h4>\\n        <table class=\\\"table table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Name</th>\\n              <th scope=\\\"col\\\">Date</th>\\n              <th scope=\\\"col\\\">Location</th>\\n              <th scope=\\\"col\\\">Host</th>\\n              <th scope=\\\"col\\\">Action / Status</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr class=\\\"table-success\\\" *ngFor=\\\"let a of allevents\\\">\\n              <th class=\\\"col-xs-3\\\" scope=\\\"row\\\" *ngIf=\\\"a.location == user.location\\\"><a style=\\\"color: yellow;\\\" [routerLink]=\\\"['/eventdetail', a._id]\\\">{{a.name}}</a></th>\\n              <td class=\\\"col-xs-3\\\" *ngIf=\\\"a.location == user.location\\\">{{a.date | date:'longDate'}}</td>\\n              <td class=\\\"col-xs-1\\\" *ngIf=\\\"a.location == user.location\\\">{{a.location}}</td>\\n              <td class=\\\"col-xs-1\\\" *ngIf=\\\"a.location == user.location\\\">{{a._event_poster.first_name}} {{a._event_poster.last_name}}</td>\\n              <td class=\\\"col-xs-4\\\" *ngIf=\\\"a.location == user.location\\\">\\n                <button *ngIf=\\\"a._event_poster._id === user._id\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete(a._id)\\\">Delete</button>\\n                <span *ngIf=\\\"a._users_joined.includes(user._id)\\\">Joining --\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"cancle_join(a._id)\\\">Cancle</button>\\n                </span>\\n                <button *ngIf=\\\"!a._users_joined.includes(user._id) && a._event_poster._id != user._id\\\" class=\\\"btn btn-info\\\" (click)=\\\"join(a._id)\\\">Join</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <hr>\\n\\n      <!-- event from different states of current user -->\\n      <div class=\\\"diff_state\\\">\\n        <h4>Here are some of the events in other states:</h4>\\n        <table class=\\\"table table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Name</th>\\n              <th scope=\\\"col\\\">Date</th>\\n              <th scope=\\\"col\\\">Location</th>\\n              <th scope=\\\"col\\\">Host</th>\\n              <th scope=\\\"col\\\">Action / Status</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr class=\\\"table-success\\\" *ngFor=\\\"let a of allevents\\\">\\n              <th class=\\\"col-xs-3\\\" scope=\\\"row\\\" *ngIf=\\\"a.location != user.location\\\"><a style=\\\"color: yellow;\\\" [routerLink]=\\\"['/eventdetail', a._id]\\\">{{a.name}}</a></th>\\n              <td class=\\\"col-xs-3\\\" *ngIf=\\\"a.location != user.location\\\">{{a.date | date:'longDate'}}</td>\\n              <td class=\\\"col-xs-1\\\" *ngIf=\\\"a.location != user.location\\\">{{a.location}}</td>\\n              <td class=\\\"col-xs-1\\\" *ngIf=\\\"a.location != user.location\\\">{{a._event_poster.first_name}} </td>\\n              <td class=\\\"col-xs-4\\\" *ngIf=\\\"a.location != user.location\\\">\\n                <button *ngIf=\\\"a._event_poster._id === user._id\\\" class=\\\"btn btn-danger\\\" (click)=\\\"delete(a._id)\\\">Delete</button>\\n                <span *ngIf=\\\"a._users_joined.includes(user._id)\\\">Joining --\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"cancle_join(a._id)\\\">Cancle</button>\\n                </span>\\n                <button *ngIf=\\\"!a._users_joined.includes(user._id) && a._event_poster._id != user._id\\\" class=\\\"btn btn-info\\\" (click)=\\\"join(a._id)\\\">Join</button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.html\n// module id = ../../../../../src/app/event-dashboard/event-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-event-dashboard',\n  templateUrl: './event-dashboard.component.html',\n  styleUrls: ['./event-dashboard.component.css']\n})\nexport class EventDashboardComponent implements OnInit {\n  user;\n  today = new Date();\n  tomorrow = this.today.setDate(this.today.getDate() + 1);\n\n  event = {\n    name: \"\",\n    date: \"\",\n    location: \"\"\n  }\n  allevents;\n\n\n\n  constructor(private _service: MainService, private _router: Router, private _route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    if (localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    this.user = this._service.user;\n    this._service.retrieveAllEvent((res) => {\n      console.log(\"from event dash com oninit: \", res);\n      this.allevents = res;\n    })\n  }\n\n  create_event() {\n    this._service.create_event(this.event, (res) => {\n      this._service.retrieveAllEvent((res) => {\n        console.log(\"from event dash com oninit: \", res);\n        this.allevents = res;\n      })\n    })\n    this.event = {\n      name: \"\",\n      date: \"\",\n      location: \"\"\n    }\n\n\n\n    \n\n  }\n\n  delete(event_id) {\n    this._service.delete_event(event_id, (res) => {\n      console.log(\"delete event success: \", res);\n      this._service.retrieveAllEvent((res) => {\n        console.log(\"from event dash com oninit: \", res);\n        this.allevents = res;\n      })\n    })\n  }\n\n  join(event_id) {\n    this._service.join_event(event_id, (res) => {\n      console.log(\"join event success: \", res);\n      this._service.retrieveAllEvent((res) => {\n        console.log(\"from event dash com oninit: \", res);\n        this.allevents = res;\n      })\n    })\n  }\n\n  cancle_join(event_id) {\n    this._service.cancle_join(event_id, (res) => {\n      console.log(\"cancle join success: \", res);\n      this._service.retrieveAllEvent((res) => {\n        console.log(\"from event dash com oninit: \", res);\n        this.allevents = res;\n      })\n    })\n  }\n\n  logout() {\n    this._service.logout();\n    this._router.navigate(['/']);\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-dashboard/event-dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/eventdetail.jpg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  background-attachment:fixed;\\n  height: 900px;\\n  /*opacity: 0.9;*/\\n  padding-top: 150px;\\n}\\n\\n.list-group1 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  padding-left: 0;\\n  margin-bottom: 0;\\n  /*position: fixed;*/\\n  width: 30rem;\\n}\\n\\n.list {\\n  display: blcok;\\n}\\n\\n.tab {\\n  margin-top: 70px;\\n  width: 60%;\\n}\\n\\n.r {\\n  background-color: green;\\n  color: white;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.css\n// module id = ../../../../../src/app/event-detail/event-detail.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" style=\\\"color: white;\\\">Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard\\n          <span class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile\\n          <span class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events\\n          <span class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\" (submit)=\\\"logout()\\\">\\n      <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n    </form>\\n  </div>\\n</div>\\n</nav>\\n\\n<div class=\\\"back\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"list\\\">\\n      <div class=\\\"list-group1\\\">\\n        <p class=\\\"list-group-item list-group-item-action active\\\">\\n          Host: {{event._event_poster.first_name}} {{event._event_poster.last_name}}\\n        </p>\\n        <p class=\\\"list-group-item list-group-item-action\\\">Date: {{event.date | date: \\\"longDate\\\"}}\\n        </p>\\n        <p class=\\\"list-group-item list-group-item-action\\\">Location: {{event.location}}\\n        </p>\\n        <p class=\\\"list-group-item list-group-item-action\\\">People who are joining this event: {{event._users_joined.length}}\\n        </p>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"tab\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr class=\\\"table-primary\\\">\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Location</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor = \\\"let e of event._users_joined\\\" class=\\\"r\\\">\\n            <th scope=\\\"row\\\">{{e.first_name}} {{e.last_name}}</th>\\n            <td>{{e.email}}</td>\\n            <td>{{e.location}}</td>\\n          </tr>\\n        </tbody>\\n      </table> \\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.html\n// module id = ../../../../../src/app/event-detail/event-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.css']\n})\nexport class EventDetailComponent implements OnInit {\n  event;\n  user;\n  constructor(private _service: MainService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    if (localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    this.user = this._service.user;\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneEvent(params.get(\"id\"), (res) => {\n        console.log(\"event detail service retrieve: \", res);\n        this.event = res;\n      })\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/event-detail/event-detail.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".top {\\n  margin-top: 30px;\\n}\\n\\n#atag {\\n  color: blue;\\n  margin-top: 20px;\\n  display: block;\\n}\\n\\n.back {\\n  background-image: url(\\\"/./../assets/img/login.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 800px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"back\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Bruce's App</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n\\n          </li>\\n        </ul>\\n        <a [routerLink]=\\\"['/register']\\\"><button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Register</button></a>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    <form class=\\\"top\\\" (submit) = \\\"login()\\\">\\n      <fieldset>\\n        <legend>Sign In</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" name=\\\"email\\\" [(ngModel)] = \\\"user_log.email\\\" #log_email = \\\"ngModel\\\" required>\\n        </div>\\n        <div *ngIf=\\\"log_email.invalid && (log_email.dirty || log_email.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"log_email.errors.required\\\">\\n            Email is required.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputPassword1\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)] = \\\"user_log.password\\\" #log_password = \\\"ngModel\\\" required >\\n        </div>\\n        <div *ngIf=\\\"log_password.invalid && (log_password.dirty || log_password.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"log_password.errors.required\\\">\\n            Password is required.\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </fieldset>\\n      <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error_message.login != ''\\\">\\n        {{error_message.login}}\\n      </div>\\n    </form>\\n    <a [routerLink]=\\\"['/register']\\\" id=\\\"atag\\\">Don't hava an account? Register.</a>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user_log = {\n    email: \"\",\n    password: \"\"\n  }\n\n  error_message = {\n    login: \"\"\n  }\n  constructor(private _service: MainService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this._service.login(this.user_log, \n      (res) => {\n        console.log(\"from login com: \", res);\n        if(res.error == undefined) {\n          this._router.navigate(['/dashboard']);\n        }\n        else {\n          this.error_message.login = res.error;\n        }\n      });\n    this.user_log = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/login/login.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class MainService {\n  user;\n  constructor(private _http: Http) {\n    if (localStorage.user != undefined) {\n      this.user = JSON.parse(localStorage.user);\n    }\n  }\n\n  login(userdata, callback) {\n    console.log(userdata);\n    this._http.post(\"/login\", userdata).subscribe(\n      (res) => {\n        callback(res.json());\n        this.user = res.json();\n        if (res.json().error == undefined) {\n          this.user = res.json();\n          console.log(\"from service login: \", this.user);\n          localStorage.user = JSON.stringify(res.json());\n        }\n      },\n      (err) => {\n        console.log(\"error from login service: \", err);\n      })\n  }\n\n  register(userdata, callback) {\n    this._http.post(\"/register\", userdata).subscribe(\n      (res) => {\n        console.log(\"from service register: \", res.json());\n        callback(res.json());\n        if (res.json().success == \"success\") {\n          this.user = res.json().user;\n          localStorage.user = JSON.stringify(res.json().user);\n        }\n      },\n      (err) => {\n        console.log(\"from service register error: \", err);\n      }\n    )\n  }\n\n  retrieveAllUser(callback) {\n    this._http.get(\"/users\").subscribe(\n      (res) => {\n        // console.log(\"from service retrieveAllUser: \", res);\n        callback(res.json());\n      })\n  }\n\n  //self-update info by user\n  update(user, callback) {\n    this._http.put(\"/user/\" + this.user._id, user).subscribe((res) => {\n      console.log(\"from update: \", res.json());\n      this.user = res.json();\n      localStorage.user = JSON.stringify(res.json());\n      callback(res.json());\n    })\n  }\n\n  //self-update password by user\n  updatepassword(password, callback) {\n    console.log(\"from service update password: \", password);\n    this._http.put(\"/password/\" + this.user._id, { password: password }).subscribe(\n      (res) => {\n        callback(res.json());\n        this.user = res.json();\n        localStorage.user = JSON.stringify(res.json());\n      },\n      (err) => {\n        console.log(\"from service update password err: \", err);\n      })\n  }\n\n  //self-add description by user\n  add_description(des, callback) {\n    this._http.put(\"/des/\" + this.user._id, { des: des }).subscribe(\n      (res) => {\n        callback(res.json());\n        this.user = res.json();\n        localStorage.user = JSON.stringify(res.json());\n      },\n      (err) => {\n        console.log(\"err from service add des: \", err);\n      })\n  }\n\n  //add a new user by admin\n  add_new(userdata, callback) {\n    this._http.post(\"/register\", userdata).subscribe(\n      (res) => {\n        console.log(\"from service register: \", res.json());\n        callback(res.json());\n      },\n      (err) => {\n        console.log(\"from service add_new error: \", err);\n      }\n    )\n  }\n\n  //delete a user by admin\n  delete_user(id, callback) {\n    this._http.delete(\"/user/\" + id).subscribe(\n      (res) => {\n        callback(res.json());\n      },\n      (err) => {\n        console.log(\"from service delete user: \", err);\n      })\n  }\n\n  //retrieve one user in edit other component\n  retrieveOneUser(id, callback) {\n    this._http.get(\"/user/\" + id).subscribe(\n      (res) => {\n        // console.log(res.json());\n        callback(res.json())\n      },\n      (err) => {\n        console.log(\"from service retrieveOneUser err: \", err);\n      })\n  }\n\n  //update other user info by admin\n  update_other(id, user, callback) {\n    console.log(\"update other: \", user);\n    this._http.put(\"/user/\" + id, user).subscribe((res) => {\n      callback(res.json());\n    },\n      (err) => {\n        console.log(\"err from service update other: \", err);\n      })\n  }\n\n  //update other user password by admin\n  update_other_password(id, password, callback) {\n    console.log(\"from service update password: \", password);\n    this._http.put(\"/password/\" + id, { password: password }).subscribe(\n      (res) => {\n        callback(res.json());\n      },\n      (err) => {\n        console.log(\"from service update password err: \", err);\n      })\n  }\n\n  create_message(message, target_id, callback) {\n    this._http.post(\"/message/\" + target_id + \"/\" + this.user._id, message).subscribe((res) => {\n      console.log(\"from service create message: create success: \", res);\n      callback(res.json());\n    },\n      (err) => {\n        console.log(\"from service create message: error: \", err);\n      })\n  }\n\n  create_comment(msg_id, comment, callback) {\n    this._http.post(\"/comment/\" + msg_id + \"/\" + this.user._id, comment).subscribe((res) => {\n      console.log(\"from service create comment: create success\");\n      callback(res.json());\n    },\n      (err) => {\n        console.log(\"from service create comment: error\");\n      })\n  }\n\n  delete_message(id, callback) {\n    this._http.delete(\"/message/\" + id).subscribe((res) => {\n      callback(res.json());\n    })\n  }\n\n  delete_comment(id, callback) {\n    this._http.delete(\"/comment/\" + id).subscribe((res) => {\n      callback(res.json());\n    })\n  }\n\n  create_event(event, callback) {\n    this._http.post(\"/user/\" + this.user._id + \"/event\", event).subscribe(\n      (res) => {\n        console.log(\"from service create event: \", res.json());\n        callback(res.json())\n      },\n      (err) => {\n        console.log(\"err from service create event: \", err);\n      })\n  }\n\n  retrieveAllEvent(callback) {\n    this._http.get(\"/event\").subscribe(\n      (res) => {\n        console.log(\"from service retrieve events: \", res);\n        callback(res.json())\n      },\n      (err) => {\n        console.log(\"err from service retrieve events: \", err);\n      })\n  }\n\n  delete_event(event_id, callback) {\n    this._http.delete(\"/event/\" + event_id).subscribe(\n      (res) => {\n        callback(res.json());\n      }\n    )\n  }\n\n  join_event(event_id, callback) {\n    this._http.post(\"/join/\" + event_id + \"/\" + this.user._id, {}).subscribe(\n      (res) => {\n        console.log(\"join event from service: \", res);\n        callback(res.json());\n      })\n  }\n\n  cancle_join(event_id, callback) {\n    this._http.post(\"/cancle/\" + event_id + \"/\" + this.user._id, {}).subscribe(\n      (res) => {\n        console.log(\"cancle join from service: \", res);\n        callback(res.json());\n      }\n    )\n  }\n\n  retrieveOneEvent(event_id, callback) {\n    this._http.get(\"/detail/\" + event_id).subscribe(\n      (res) => {\n        callback(res.json());\n      })\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/main.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-color: grey;\\n  background-position: center center;\\n  background-size: cover;\\n  height: 1000px;\\n  opacity: 0.9;\\n  background-attachment:fixed;\\n  background-repeat: repeat-y;\\n}\\n\\n.pad {\\n  padding-top: 93px;\\n  margin-left: 13%;\\n}\\n\\n.bg-info1 {\\n  background-color: #5cdb348f !important;\\n}\\n\\n.text-white1 {\\n  color: #14195e !important;\\n}\\n\\n.messagearea {\\n  margin-left: 39%;\\n  margin-top: -5px;\\n  /*height: 900px;\\n  overflow: scroll;*/\\n  /*position: fixed;*/\\n}\\n.showmessage {\\n  height: 700px;\\n  /*overflow: scroll;*/\\n}\\n\\n.form-control1 {\\n  display: block;\\n  width: 100%;\\n  height: 70px;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 0.9375rem;\\n  line-height: 1.5;\\n  color: #7b8a8b;\\n  background-color: #fff;\\n  background-image: none;\\n  background-clip: padding-box;\\n  border: 2px solid #d73013;\\n  border-radius: 0.25rem;\\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\\n}\\n\\n.btnright {\\n  margin-top: 10px;\\n  float: right;\\n}\\n\\n.btnright2 {\\n  float: right;\\n}\\n\\n\\n.card-header1 {\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 0;\\n  background-color: rgba(149, 135, 32, 0.5);\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n  font-size: 23px;\\n}\\n\\n.card-header2 {\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 0;\\n  background-color: rgb(22, 241, 98);\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n  border-top-left-radius: 8px;\\n  border-top-right-radius: 8px;\\n  font-size: 18px;\\n  height: 40px;\\n}\\n\\n.card-body2 {\\n  width: 42.3rem;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n  padding: 0.5rem;\\n  height: 44px;\\n  margin-top: 1px;\\n  margin-left: -20px;\\n  background-color: #fdb76094;\\n  border-bottom-left-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n\\n.card2 {\\n  margin-top: 58px;\\n  position: relative;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  \\n  border-radius: 0.25rem;\\n}\\n\\n.right {\\n  float: right;\\n}\\n\\n.messageform {\\n  width: 42rem;\\n  /*position: fixed;*/\\n}\\n\\n.card-header3 {\\n  padding: 0.75rem 1.25rem;\\n  margin-bottom: 0;\\n  background-color: rgb(208, 237, 218);\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\\n  border-top-left-radius: 8px;\\n  border-top-right-radius: 8px;\\n  font-size: 16px;\\n  height: 40px;\\n\\n}\\n\\n.card-body3 {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n  padding: 0.5rem;\\n  height: 44px;\\n  border-bottom-left-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n  background-color: #95f3f3a1;\\n}\\n\\n.card3 {\\n  margin-top: 57px;\\n  position: relative;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 0;\\n  word-wrap: break-word;\\n  background-color: #fff;\\n  background-clip: border-box;\\n  \\n  border-radius: 0.25rem;\\n}\\n\\n.comment {\\n  padding-left: 6rem;\\n}\\n\\n.form-control2 {\\n  display: block;\\n  width: 100%;\\n  height: 40px;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 0.9375rem;\\n  line-height: 1.5;\\n  color: #7b8a8b;\\n  background-color: #fff;\\n  background-image: none;\\n  background-clip: padding-box;\\n  border: 2px solid #3d27248a;\\n  border-radius: 0.25rem;\\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\\n}\\n\\n.commentform {\\n  padding-left: 364px;\\n  margin-top: 54px;\\n}\\n\\n\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.css\n// module id = ../../../../../src/app/message/message.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default navbar-expand-lg navbar-dark bg-primary fixed-top \\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\" (submit) = \\\"logout()\\\">\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n      </form>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div>\\n  <div class=\\\"container pad\\\">\\n    <div class=\\\"card text-white1 bg-info1 mb-3\\\" style=\\\"max-width: 20rem;position: fixed;\\\">\\n      <div class=\\\"card-header1\\\">{{target_user.first_name}} {{target_user.last_name}}</div>\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\"><strong>Register at</strong>: {{target_user.createdAt | date:'longDate'}}</p>\\n        <p class=\\\"card-text\\\"><strong>Email</strong>: {{target_user.email}}</p>\\n        <p class=\\\"card-text\\\"><strong>Description</strong>: {{target_user.description}}</p>\\n      </div>\\n    </div>\\n    \\n    \\n    <div class=\\\"messagearea\\\">\\n      <form (submit) = \\\"create_message()\\\" class=\\\"messageform\\\">\\n        <div class=\\\"form-group\\\">\\n          <h3>Leave a message for <span style=\\\"color: blue;\\\">{{target_user.first_name}}</span> </h3>\\n          <input type=\\\"text\\\" name=\\\"mes\\\" [(ngModel)] = \\\"message.content\\\" required #mess = \\\"ngModel\\\" class=\\\"form-control1\\\">  \\n          <button class=\\\"btn btn-warning btnright\\\" >Post</button>\\n        </div>\\n      </form>\\n\\n      <div class=\\\"card2 text-white1 mb-3\\\" style=\\\"max-width: 45rem;\\\" *ngFor = \\\"let m of target_user._receive_messages\\\">\\n        <div class=\\\"card-header2\\\">\\n          <strong>{{m._poster.first_name}} {{m._poster.last_name}}</strong>'s message<span class=\\\"right\\\">{{m.createdAt | date: 'medium'}}</span>\\n\\n          <div class=\\\"card-body2\\\">\\n            <p class=\\\"card-text\\\" style=\\\"display: inline-block;\\\">{{m.content}}</p><span class=\\\"btnright2\\\"><button *ngIf = \\\"m._poster._id == current_user._id\\\" class=\\\"btn btn-info btn-sm\\\" (click) = \\\"delete_message(m._id)\\\">Delete this message</button></span>\\n          </div>\\n        </div>\\n        <div class=\\\"comment\\\">\\n          <div class=\\\"card3 border-info mb-3\\\" style=\\\"max-width: 37rem;\\\" *ngFor = \\\"let c of m._comments\\\">\\n            <div class=\\\"card-header3\\\">{{c._poster.first_name}} {{c._poster.last_name}}'s comment<span class=\\\"right\\\">{{c.createdAt | date: 'medium'}}</span></div>\\n            <div class=\\\"card-body3 text-primary\\\">\\n              <p class=\\\"card-text\\\">{{c.content}}<span class=\\\"btnright2\\\"><button *ngIf = \\\"c._poster._id == current_user._id\\\" class=\\\"btn btn-info btn-sm\\\" (click) = \\\"delete_comment(c._id)\\\">Delete this comment</button></span></p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"commentform\\\">\\n          <form (submit) = \\\"create_comment(m._id)\\\">\\n            <div class=\\\"form-group\\\">\\n              <h6>Write a comment</h6>\\n              <input type=\\\"text\\\" class=\\\"form-control2\\\" name=\\\"comment\\\" [(ngModel)] = \\\"comment.content\\\" required #comm = \\\"ngModel\\\" >\\n              <button class=\\\"btn btn-info btn-sm btnright\\\">Comment</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.html\n// module id = ../../../../../src/app/message/message.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\nexport class MessageComponent implements OnInit {\n  current_user;\n  target_user;\n  target_id;\n  message = {\n    content: \"\"\n  };\n\n  comment = {\n    content: \"\"\n  }\n  \n  constructor(private _service: MainService, private _router: Router, private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.current_user = this._service.user;\n    console.log(this.current_user);\n    if(localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n        console.log(res);\n        this.target_user = res;\n        this.target_id = res._id;\n        // console.log(\"this\", this.target_user._receive_messages[0]._poster.first_name);\n        \n      })\n    })\n  }\n\n  create_message() {\n    this._service.create_message(this.message, this.target_id, (res) => {\n      console.log(\"from message com create success: \", res);\n      this._route.paramMap.subscribe(params => {\n        this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n          this.target_user = res;\n        })\n      })\n    })\n    \n    this.message = {\n      content: \"\"\n    }\n  }\n\n  create_comment(msg_id) {\n    this._service.create_comment(msg_id, this.comment, (res) => {\n      console.log(\"from message com create comment success\");\n    })\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n        this.target_user = res;\n      })\n    })\n    this.comment = {\n      content: \"\"\n    }\n  }\n\n  delete_message(msg_id) {\n    this._service.delete_message(msg_id, (res) => {\n      console.log(\"delete success: \", res);\n    })\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n        this.target_user = res;\n      })\n    })\n  }\n\n  delete_comment(comm_id) {\n    this._service.delete_comment(comm_id, (res) => {\n      console.log(\"delete comment success: \", res);\n    })\n    this._route.paramMap.subscribe(params => {\n      this._service.retrieveOneUser(params.get(\"id\"), (res) => {\n        this.target_user = res;\n      })\n    })\n  }\n\n  logout() {\n    this._service.logout();\n    this._router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/message/message.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".back {\\n  background-image: url(\\\"/./../assets/img/addnew.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 1000px;\\n  opacity: 0.9;\\n}\\n\\n.tabletop {\\n  display: inline-block;\\n  margin-top: 100px;\\n\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.css\n// module id = ../../../../../src/app/newuser/newuser.component.css\n// module chunks = main","module.exports = \"<div class=\\\"back\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" id=\\\"header\\\" style=\\\"color: white;\\\">Bruce's App</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/edit']\\\">Profile <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/events']\\\">Check Events <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\" (submit) = \\\"logout()\\\">\\n          <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Log out</button>\\n        </form>\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    <form class=\\\"top\\\" (submit) = (add_new()) >\\n      <fieldset>\\n        <legend>Add a new user</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Email address:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" [(ngModel)] = \\\"new_user.email\\\" required email #reg_email = \\\"ngModel\\\" name=\\\"email\\\">\\n        </div>\\n\\n        <div *ngIf=\\\"reg_email.invalid && (reg_email.dirty || reg_email.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_email.errors.required\\\">\\n            Email is required.\\n          </div>\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_email.errors.email\\\">\\n            Please input an valid email.\\n          </div>\\n        </div>\\n\\n        <!-- first name -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">First Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter first name\\\" name=\\\"firstname\\\" [(ngModel)] = \\\"new_user.first_name\\\" #reg_firstname = \\\"ngModel\\\" required >\\n        </div>\\n        <div *ngIf=\\\"reg_firstname.invalid && (reg_firstname.dirty || reg_firstname.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_firstname.errors.required\\\">\\n            First name is required.\\n          </div>\\n        </div>\\n        \\n        <!-- last name -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Last Name: </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter last name\\\" name=\\\"lastname\\\" [(ngModel)] = \\\"new_user.last_name\\\" #reg_lastname = \\\"ngModel\\\" required>\\n        </div>\\n        <div *ngIf=\\\"reg_lastname.invalid && (reg_lastname.dirty || reg_lastname.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_lastname.errors.required\\\">\\n            Last name is required.\\n          </div>\\n        </div>\\n\\n        <!-- location -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Location: </label>\\n          <select [(ngModel)] = \\\"new_user.location\\\" #reg_location = \\\"ngModel\\\" name=\\\"locat\\\" required>\\n            <option value=\\\"AL\\\">Alabama</option>\\n            <option value=\\\"AK\\\">Alaska</option>\\n            <option value=\\\"AZ\\\">Arizona</option>\\n            <option value=\\\"AR\\\">Arkansas</option>\\n            <option value=\\\"CA\\\">California</option>\\n            <option value=\\\"CO\\\">Colorado</option>\\n            <option value=\\\"CT\\\">Connecticut</option>\\n            <option value=\\\"DE\\\">Delaware</option>\\n            <option value=\\\"DC\\\">District Of Columbia</option>\\n            <option value=\\\"FL\\\">Florida</option>\\n            <option value=\\\"GA\\\">Georgia</option>\\n            <option value=\\\"HI\\\">Hawaii</option>\\n            <option value=\\\"ID\\\">Idaho</option>\\n            <option value=\\\"IL\\\">Illinois</option>\\n            <option value=\\\"IN\\\">Indiana</option>\\n            <option value=\\\"IA\\\">Iowa</option>\\n            <option value=\\\"KS\\\">Kansas</option>\\n            <option value=\\\"KY\\\">Kentucky</option>\\n            <option value=\\\"LA\\\">Louisiana</option>\\n            <option value=\\\"ME\\\">Maine</option>\\n            <option value=\\\"MD\\\">Maryland</option>\\n            <option value=\\\"MA\\\">Massachusetts</option>\\n            <option value=\\\"MI\\\">Michigan</option>\\n            <option value=\\\"MN\\\">Minnesota</option>\\n            <option value=\\\"MS\\\">Mississippi</option>\\n            <option value=\\\"MO\\\">Missouri</option>\\n            <option value=\\\"MT\\\">Montana</option>\\n            <option value=\\\"NE\\\">Nebraska</option>\\n            <option value=\\\"NV\\\">Nevada</option>\\n            <option value=\\\"NH\\\">New Hampshire</option>\\n            <option value=\\\"NJ\\\">New Jersey</option>\\n            <option value=\\\"NM\\\">New Mexico</option>\\n            <option value=\\\"NY\\\">New York</option>\\n            <option value=\\\"NC\\\">North Carolina</option>\\n            <option value=\\\"ND\\\">North Dakota</option>\\n            <option value=\\\"OH\\\">Ohio</option>\\n            <option value=\\\"OK\\\">Oklahoma</option>\\n            <option value=\\\"OR\\\">Oregon</option>\\n            <option value=\\\"PA\\\">Pennsylvania</option>\\n            <option value=\\\"RI\\\">Rhode Island</option>\\n            <option value=\\\"SC\\\">South Carolina</option>\\n            <option value=\\\"SD\\\">South Dakota</option>\\n            <option value=\\\"TN\\\">Tennessee</option>\\n            <option value=\\\"TX\\\">Texas</option>\\n            <option value=\\\"UT\\\">Utah</option>\\n            <option value=\\\"VT\\\">Vermont</option>\\n            <option value=\\\"VA\\\">Virginia</option>\\n            <option value=\\\"WA\\\">Washington</option>\\n            <option value=\\\"WV\\\">West Virginia</option>\\n            <option value=\\\"WI\\\">Wisconsin</option>\\n            <option value=\\\"WY\\\">Wyoming</option>\\n          </select>\\n        </div>\\n        <div *ngIf=\\\"reg_location.invalid && (reg_location.dirty || reg_location.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_location.errors.required\\\">\\n            Location is required.\\n          </div>\\n        </div>\\n        \\n        <!-- password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter password\\\" name=\\\"password\\\" [(ngModel)] = \\\"new_user.password\\\" #reg_password = \\\"ngModel\\\" required minlength=\\\"4\\\" >\\n        </div>\\n        <div *ngIf=\\\"reg_password.invalid && (reg_password.dirty || reg_password.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_password.errors.required\\\">\\n            Password is required.\\n          </div>\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_password.errors.minlength\\\">\\n            Password need at least four characters.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Password Confirmation</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Confirm your password\\\" name=\\\"passwordconfirm\\\" [(ngModel)] = \\\"password_confirm.con\\\" #reg_confirm = \\\"ngModel\\\" pattern=\\\"{{new_user.password}}\\\">\\n        </div>\\n        <div *ngIf=\\\"reg_confirm.invalid && (reg_confirm.dirty || reg_confirm.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_confirm.errors.pattern\\\">\\n            Not mattch the password.\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\n        <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error_message.email != ''\\\">\\n          {{error_message.email}}\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.html\n// module id = ../../../../../src/app/newuser/newuser.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-newuser',\n  templateUrl: './newuser.component.html',\n  styleUrls: ['./newuser.component.css']\n})\nexport class NewuserComponent implements OnInit {\n  current_user;\n  new_user = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    location: \"\",\n    password: \"\"\n  }\n\n  error_message = {\n    email: \"\",\n    login: \"\"\n  }\n\n  password_confirm = {\n    con: \"\"\n  }\n\n  constructor(private _service: MainService, private _router: Router) { }\n\n  ngOnInit() {\n    this.current_user = this._service.user;\n    if(localStorage.user == undefined) {\n      this._router.navigate(['/'])\n    }\n    if(this.current_user.user_level != 9) {\n      this._router.navigate(['/']);\n      localStorage.removeItem(\"user\");\n    }\n  }\n\n  add_new() {\n    console.log(\"from com add new user: \", this.new_user);\n    this._service.add_new(this.new_user,\n      (res) => {\n        if (res.success === \"success\") {\n          this._router.navigate(['/dashboard'])\n        }\n        else {\n          this.error_message.email = \"This email has been registered.\";\n        }\n        this.new_user = {\n          first_name: \"\",\n          last_name: \"\",\n          email: \"\",\n          location: \"\",\n          password: \"\"\n        };\n        this.password_confirm = {\n          con: \"\"\n        };\n      })\n  }\n\n  logout() {\n    this._service.logout();\n    this._router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/newuser/newuser.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#header {\\n  color: white;\\n}\\n\\n.top {\\n  margin-top: 90px;\\n}\\n\\n#atag {\\n  color: blue;\\n  margin-top: 20px;\\n  display: block;\\n}\\n\\n.back {\\n  background-image: url(\\\"/./../assets/img/register.jpeg\\\");\\n  background-position: center center;\\n  background-size: cover;\\n  background-attachment:fixed;\\n  height: 1000px;\\n  opacity: 0.9;\\n  padding-top: 30px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" id=\\\"header\\\" >Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n\\n        </li>\\n      </ul>\\n      <a [routerLink]=\\\"['/signin']\\\"><button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Sign in</button></a>\\n    </div>\\n  </div>\\n</nav>\\n\\n<div class=\\\"back\\\">\\n  <div class=\\\"container\\\">\\n    <form class=\\\"top\\\" (submit) = (register()) >\\n      <fieldset>\\n        <legend>Register</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Email address:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" [(ngModel)] = \\\"user_reg.email\\\" required email #reg_email = \\\"ngModel\\\" name=\\\"email\\\">\\n        </div>\\n\\n        <div *ngIf=\\\"reg_email.invalid && (reg_email.dirty || reg_email.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_email.errors.required\\\">\\n            Email is required.\\n          </div>\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_email.errors.email\\\">\\n            Please input an valid email.\\n          </div>\\n        </div>\\n\\n        <!-- first name -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">First Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter first name\\\" name=\\\"firstname\\\" [(ngModel)] = \\\"user_reg.first_name\\\" #reg_firstname = \\\"ngModel\\\" required >\\n        </div>\\n        <div *ngIf=\\\"reg_firstname.invalid && (reg_firstname.dirty || reg_firstname.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_firstname.errors.required\\\">\\n            First name is required.\\n          </div>\\n        </div>\\n        \\n        <!-- last name -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Last Name: </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter last name\\\" name=\\\"lastname\\\" [(ngModel)] = \\\"user_reg.last_name\\\" #reg_lastname = \\\"ngModel\\\" required>\\n        </div>\\n        <div *ngIf=\\\"reg_lastname.invalid && (reg_lastname.dirty || reg_lastname.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_lastname.errors.required\\\">\\n            Last name is required.\\n          </div>\\n        </div>\\n\\n        <!-- location -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Location: </label>\\n          <select [(ngModel)] = \\\"user_reg.location\\\" #reg_location = \\\"ngModel\\\" name=\\\"locat\\\" required>\\n            <option value=\\\"AL\\\">Alabama</option>\\n            <option value=\\\"AK\\\">Alaska</option>\\n            <option value=\\\"AZ\\\">Arizona</option>\\n            <option value=\\\"AR\\\">Arkansas</option>\\n            <option value=\\\"CA\\\">California</option>\\n            <option value=\\\"CO\\\">Colorado</option>\\n            <option value=\\\"CT\\\">Connecticut</option>\\n            <option value=\\\"DE\\\">Delaware</option>\\n            <option value=\\\"DC\\\">District Of Columbia</option>\\n            <option value=\\\"FL\\\">Florida</option>\\n            <option value=\\\"GA\\\">Georgia</option>\\n            <option value=\\\"HI\\\">Hawaii</option>\\n            <option value=\\\"ID\\\">Idaho</option>\\n            <option value=\\\"IL\\\">Illinois</option>\\n            <option value=\\\"IN\\\">Indiana</option>\\n            <option value=\\\"IA\\\">Iowa</option>\\n            <option value=\\\"KS\\\">Kansas</option>\\n            <option value=\\\"KY\\\">Kentucky</option>\\n            <option value=\\\"LA\\\">Louisiana</option>\\n            <option value=\\\"ME\\\">Maine</option>\\n            <option value=\\\"MD\\\">Maryland</option>\\n            <option value=\\\"MA\\\">Massachusetts</option>\\n            <option value=\\\"MI\\\">Michigan</option>\\n            <option value=\\\"MN\\\">Minnesota</option>\\n            <option value=\\\"MS\\\">Mississippi</option>\\n            <option value=\\\"MO\\\">Missouri</option>\\n            <option value=\\\"MT\\\">Montana</option>\\n            <option value=\\\"NE\\\">Nebraska</option>\\n            <option value=\\\"NV\\\">Nevada</option>\\n            <option value=\\\"NH\\\">New Hampshire</option>\\n            <option value=\\\"NJ\\\">New Jersey</option>\\n            <option value=\\\"NM\\\">New Mexico</option>\\n            <option value=\\\"NY\\\">New York</option>\\n            <option value=\\\"NC\\\">North Carolina</option>\\n            <option value=\\\"ND\\\">North Dakota</option>\\n            <option value=\\\"OH\\\">Ohio</option>\\n            <option value=\\\"OK\\\">Oklahoma</option>\\n            <option value=\\\"OR\\\">Oregon</option>\\n            <option value=\\\"PA\\\">Pennsylvania</option>\\n            <option value=\\\"RI\\\">Rhode Island</option>\\n            <option value=\\\"SC\\\">South Carolina</option>\\n            <option value=\\\"SD\\\">South Dakota</option>\\n            <option value=\\\"TN\\\">Tennessee</option>\\n            <option value=\\\"TX\\\">Texas</option>\\n            <option value=\\\"UT\\\">Utah</option>\\n            <option value=\\\"VT\\\">Vermont</option>\\n            <option value=\\\"VA\\\">Virginia</option>\\n            <option value=\\\"WA\\\">Washington</option>\\n            <option value=\\\"WV\\\">West Virginia</option>\\n            <option value=\\\"WI\\\">Wisconsin</option>\\n            <option value=\\\"WY\\\">Wyoming</option>\\n          </select>\\n        </div>\\n        <div *ngIf=\\\"reg_location.invalid && (reg_location.dirty || reg_location.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_location.errors.required\\\">\\n            Location is required.\\n          </div>\\n        </div>\\n        \\n        <!-- password -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter password\\\" name=\\\"password\\\" [(ngModel)] = \\\"user_reg.password\\\" #reg_password = \\\"ngModel\\\" required minlength=\\\"4\\\" >\\n        </div>\\n        <div *ngIf=\\\"reg_password.invalid && (reg_password.dirty || reg_password.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_password.errors.required\\\">\\n            Password is required.\\n          </div>\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_password.errors.minlength\\\">\\n            Password need at least four characters.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleInputEmail1\\\">Password Confirmation</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Confirm your password\\\" name=\\\"passwordconfirm\\\" [(ngModel)] = \\\"password_confirm.con\\\" #reg_confirm = \\\"ngModel\\\" pattern=\\\"{{user_reg.password}}\\\">\\n        </div>\\n        <div *ngIf=\\\"reg_confirm.invalid && (reg_confirm.dirty || reg_confirm.touched)\\\">\\n          <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"reg_confirm.errors.pattern\\\">\\n            Not mattch the password.\\n          </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register</button>\\n        <div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error_message.email != ''\\\">\\n          {{error_message.email}}\\n        </div>\\n      </fieldset>\\n    </form>\\n    <a [routerLink]=\\\"['/signin']\\\" id=\\\"atag\\\">Already have an account? Login.</a>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MainService } from './../main.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  user_reg = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    location: \"\",\n    password: \"\"\n  }\n\n  password_confirm = {\n    con: \"\"\n  }\n\n  error_message = {\n    email: \"\",\n    login: \"\"\n  }\n  constructor(private _service: MainService, private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    console.log(\"from com register: \", this.user_reg);\n    this._service.register(this.user_reg,\n      (res) => {\n        if (res.success === \"success\") {\n          this._router.navigate(['/dashboard'])\n        }\n        else {\n          this.error_message.email = \"This email has been registered.\";\n        }\n        this.user_reg = {\n          first_name: \"\",\n          last_name: \"\",\n          email: \"\",\n          location: \"\",\n          password: \"\"\n        };\n        this.password_confirm = {\n          con: \"\"\n        };\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/register/register.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bottomcard {\\n  display: inline-block;\\n  max-width: 23rem;\\n  height: 14rem;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.css\n// module id = ../../../../../src/app/welcome/welcome.component.css\n// module chunks = main","module.exports = \"\\n<!-- #############navbar################ -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Bruce's App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n      <!-- <form class=\\\"form-inline my-2 my-lg-0\\\"> -->\\n        <a [routerLink]=\\\"['signin']\\\"><button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Sign In</button></a>\\n        <!--   </form> -->\\n      </div>\\n    </div>\\n  </nav>\\n\\n  <!-- ##########jumbotron################ -->\\n  <div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <h1 class=\\\"display-3\\\">Welcome to the Bruce's User Dashboard!</h1>\\n      <p class=\\\"lead\\\">This User Dashboard app is built by MEAN stack which inclue MongoDB, Express, Angular, and Node.js. And also with the libraries include jQuery and Bootstrap.</p>\\n      <hr class=\\\"my-4\\\">\\n      <p class=\\\"lead\\\">\\n        <a class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['signin']\\\" role=\\\"button\\\">Let's Start!</a>\\n      </p>\\n    </div>\\n\\n    <!-- ###########card################### -->\\n\\n    <div class=\\\"card text-white bg-info mb-3 bottomcard\\\">\\n      <div class=\\\"card-header\\\">Manage User</div>\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">Using this app, you can add, remove, and edit users from the dashboard.</p>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card text-white bg-info mb-3 bottomcard\\\">\\n      <div class=\\\"card-header\\\">Leave Message</div>\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">Users will be able to leave a message to another user using this app.</p>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card text-white bg-info mb-3 bottomcard\\\">\\n      <div class=\\\"card-header\\\">Edit user info</div>\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">Admins will be able to edit another user's information.</p>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.html\n// module id = ../../../../../src/app/welcome/welcome.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/app/welcome/welcome.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/suannaibao/Google Drive/codingdojo/mean/fullmean/userdashboard——script/client/src/main.ts"],"sourceRoot":"webpack:///"}